/*
"Be aware of the many CSS selectors available: https://www.w3schools.com/cssref/css_selectors.asp.
That way, you can intuitively pick the right one for any context."
*/

/* For this FEM project, I have not yet made it work fully with the "tab test" (for accessibility). */


/************************************************************
********** For Mobile/Narrow Viewport **********
************************************************************/

/* Remember I worked with FEM's mobile demo at zoom bbbbbbbbbbbbbbbbbb. */

/* Always use this, as Brian Holt advises. It makes the size ("width", for example) of every element equal to the element's content + its padding + its border, and not inclusive of margin of course. */
* {
    box-sizing: border-box;
}

html, body {
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Poppins', sans-serif;
    padding: 100px 25px 0 25px; /* Using 25px padding here instead of "width: [some percentage]", or something like it, on <main>. Remember padding doesn't always "expand outwards"; most of the time it actually eats into the space of its child, as is the case here. */
    background:
        hsl(0, 100%, 74%)
        url("../../assets/img/bg-intro-mobile.png")
            repeat
            scroll;
}

/****************************************
header
****************************************/

header {
    text-align: center;
    color: white;
}

.title {
    max-width: 300px;
    margin: auto;
    font-size: 35px;
    font-weight: 600;
    line-height: 1.3;
}

.header-p {
    font-size: 19px;
    margin-top: 30px;
    margin-bottom: 70px;
    line-height: 1.7;
}

/****************************************
main
****************************************/

.try-it-pitch {
    background-color: hsl(248, 32%, 49%);
    text-align: center;
    font-size: 19px;
    color: white;
    padding: 20px 90px 20px 90px;
    border-radius: 12px;
    margin-bottom: 27px;
}

.try-it-pitch span {
    font-weight: 600;
}

.form-parent {
    background-color: white;
    padding: 27px;
    border-radius: 12px;
}

.form-input {
    width: 100%;
    font-family: 'Poppins', sans-serif;
    font-weight: 600;
    font-size: 17px;
    border-radius: 7px;
    border: 1px solid hsl(246, 25%, 77%);
    padding: 17px 0 17px 22px;
    margin-bottom: 20px;
}

.free-trial-btn {
    width: 100%;
    font-family: 'Poppins', sans-serif;
    font-size: 19px;
    font-weight: 500;
    letter-spacing: 1px;
    border-radius: 7px;
    background-color: hsl(154, 59%, 51%);
    text-transform: uppercase;
    color: white;
    padding: 17px 0;
    border: none;
}

.terms-of-click {
    margin: 0;
    color: hsl(246, 25%, 77%);
    font-size: 13px;
    font-weight: 500; /*change?*/
    text-align: center;
    padding: 10px 25px 0 25px;
    line-height: 2.0;
}

.terms-of-click a {
    color: hsl(0, 100%, 74%);
    text-decoration: none;
    font-weight: 700;
}

/****************************************
footer
****************************************/

.attribution {
    text-align: center;
    font-size: 11px;
    margin-bottom: 0;
    margin-top: 50px;
}

.attribution a {
    color: hsl(228, 45%, 44%); /*hsl(hue, saturation, lightness)*/
}

/************************************************************
********** For Desktop/Wide Viewport **********
************************************************************/

/*@media screen and (min-width: 850px) {*/ /* starting at width of 850px, the code below (which is only for CHANGES to the above code) will take effect. */

    /****************************************
    header
    ****************************************/


    /****************************************
    main
    ****************************************/


    /****************************************
    footer
    ****************************************/

/* } */
  
  
  
  
  
  
  
  
  
  
  
  
/* KEEP THIS AS A REFERENCE:
parent {
    display: flex;    mandatory 
    flex-direction: ;    row (default) | row-reverse | column | column-reverse 
    justify-content: ;    flex-start (default) | flex-end | center | space-between | space-around | space-evenly 
    align-items: ;    flex-start | flex-end | center | (baseline) | stretch (default) 
    flex-wrap: ;    nowrap (default) | wrap | wrap-reverse 
    align-content: ;    flex-start | flex-end | center | space-between | space-around | stretch (default) 
}
  
child {
    align-self: ;    flex-start | flex-end | center | (baseline) | stretch (default)
    flex-grow: ;    0 is default 
    flex-shrink: ;    1 is default 
    flex-basis: ;    auto is default 
    order: ;    0 is default
  
    flex: [a number];    this is a way (instead of using percentages outside of Flexbox) to set relative sizes of elements. (This is how I THOUGHT flex-grow worked.)
}
*/